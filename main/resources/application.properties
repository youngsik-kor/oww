# Banking Service 기본 설정
spring.application.name=banking-service
server.port=8203

# 게이트웨이 기본 URL 설정 (네비게이션에서 사용)
app.gateway-base-url=http://localhost:8201

# 정적 리소스 설정
spring.web.resources.static-locations=classpath:/static/
spring.mvc.static-path-pattern=/**

# ========================================
# Eureka 설정 - 다른 서비스와 통일
# ========================================
eureka.client.service-url.defaultZone=http://localhost:8200/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# 중요: 호스트명을 localhost로 강제 설정 (다른 서비스와 동일)
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=false

# Banking Service 자체 URL을 localhost로 설정
eureka.instance.home-page-url=http://localhost:8203/
eureka.instance.status-page-url=http://localhost:8203/actuator/info
eureka.instance.health-check-url=http://localhost:8203/actuator/health


# 스케줄러 활성화
spring.task.scheduling.enabled=true

# 세이프박스 관련 설정
safebox.unlock.notice.days=7
safebox.auto.saving.enabled=true
safebox.minimum.amount=1000

# 로깅 설정
logging.level.oww.banking.service.SafeboxService=DEBUG
logging.level.oww.banking.mapper.SafeboxMapper=DEBUG


# Thymeleaf 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.enabled=true
spring.thymeleaf.cache=false

# JWT 설정 (Login Service, Gateway와 동일하게 통일)
jwt.secret=myBankingSecretKey123456789012345678901234567890
jwt.expiration=86400000
jwt.access-token-expiration=1800000
jwt.refresh-token-expiration=1209600000

spring.mvc.contentnegotiation.media-types.css=text/css
spring.mvc.contentnegotiation.media-types.js=application/javascript

# DB 설정
spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/XEPDB1
spring.datasource.username=oww2
spring.datasource.password=oww2
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# MyBatis 설정
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=oww.banking.vo
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# JPA 설정
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false

# 이메일 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=dudtlr5119@gmail.com
spring.mail.password=rqzwvxdnfhwijmat
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

mail.from.email=dudtlr5119@gmail.com
mail.from.name=Own Wedding Wallet


# CORS 설정
spring.web.cors.allowed-origins=http://localhost:8201
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

logging.level.root=INFO

# AccountService만 DEBUG
logging.level.oww.banking.service.AccountService=DEBUG

logging.level.org.springframework.mail=DEBUG
logging.level.com.sun.mail=DEBUG


# Mapper, Spring 등은 INFO 이상으로
logging.level.oww.banking.mapper=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
# TrustedGatewayFilter 로그 줄이기 (INFO 안 찍힘)
logging.level.oww.banking.config.BankingSecurityConfig$TrustedGatewayFilter=WARN

